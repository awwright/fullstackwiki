<!DOCTYPE html>
<html lang="en" dir="ltr"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:w="tag:fullstack.wiki,2018:ns/"
	xmlns:xht="http://www.w3.org/1999/xhtml/vocab#"
>
	<head>
		<meta charset="UTF-8" />
		<title>431 Request Header Fields Too Large</title>
		<meta name="description" content="The 431 Request Header Fields Too Large indicates the client sent a request with headers too large to process." />
		<link rel="up" href="index.xml" />
	</head>
	<body>
		<main about="tag:fullstack.wiki,2018:ns/http/status-codes/431" typeof="w:HTTP-StatusCode">
			<a rel="http://www.w3.org/1999/xhtml/vocab#describedby" href="" />

			<h1>431 Request Header Fields Too Large</h1>
			<p>The 431 status code indicates that the server is unwilling to process the request because there are too many headers to process, or one of the headers is too long to process.</p>
			<p>Most HTTP requests by a Web browser will not contain more than a dozen headers, and will be less than a few hundred characters each. Servers will typically not accept more than a hundred headers, or a thousand characters on a line, because there is typically no affect on the response, and it only serves to negatively impact performance. So to prevent excessive resource usage, servers may reject these requests entirely.</p>

			<h2>Writing responses (servers)</h2>
			<p>Servers produce this status code when the server would have to consume an excessive amount of resources buffering the request headers. This can be triggered in two cases:</p>

			<h3>Parsing terminated</h3>
			<p>If the client request wrote too many headers, or a header that is too long, in such a way that then terminate parsing, return <code>431 Request Header Fields Too Large</code> with <code>Connection: close</code>, and <a href="../close.xml">close the connection</a>.</p>
			<p>It is an important feature that clients are able to provide information opportunistically, even if a server might not use it; so servers should accept many more headers than is needed to fill the request. Most HTTP servers allow a minimum of 100 headers at several thousand bytes each.</p>

			<h3>Request fully parsed</h3>
			<p>If the server fully parsed the request headers, but one of the headers is too long for the application to use, it may still indicate this with a 431 status. Include a response body describing the header, its proper usage, and a link to more information.</p>

			<h2>Reading responses (clients)</h2>
			<p>The request was not filled. The client may retry the request with fewer or shorter headers, but typically this requires user intervention to determine what part of the request triggered the error.</p>
			<p>If the error happens because one of the headers is too long, some headers may be broken apart onto multiple lines. First look at the Cookie header, since its value changes over time at the direction of the server, which may not be aware of the sort of request it's asking the client to make.</p>

			<h2>In HTTP/2</h2>
			<p>Similar circumstances in HTTP/2 might instead generate a stream or connection error of <code>x000B (ENHANCE_YOUR_CALM)</code></p>

			<h2>Overview table</h2>
			<dl class="inline">
				<dt>Name</dt>
				<dd property="w:HTTP-StatusCode-value">431</dd>
				<dt>Message</dt>
				<dd property="w:HTTP-StatusCode-line">431 Request Header Fields Too Large</dd>
				<dt>Description</dt>
				<dd property="w:HTTP-StatusCode-description">A request header is too long.</dd>
				<dt>Specification</dt>
				<dd property="w:specification"><a href="https://httpwg.org/specs/rfc6585.html#status-431">RFC 6585: Additional HTTP Status Codes &#xA7;6.5.13. 431 Request Header Fields Too Large</a></dd>
			</dl>

			<h2>Example</h2>
			<pre type="message/http" w:space="indent">
				HTTP/1.1 431 Request Header Fields Too Large
				Server: httpd/2.4.1
				Connection: close
			</pre>

			<!-- TODO: If there are any clients that can re-make a request with the correct Content-Type or Content-Encoding, list them here -->
			<h2>Implementations</h2>

			<h3>Node.js (http/https)</h3>
			<p>Node.js automatically handles too-long or too-many headers with a 431 status code and a blank body. This error is also generated when the request-line is too long, instead of a <a href="414.xml">414 (URI Too Long)</a> error. These cannot be distinguished, either by the client, or the application.</p>
			<p>A custom response may be sent in HTTP/1.1 responses by listening for the <code>clientError</code> event; request-line overflows, header size overflows, or exceeding the maximum header count will emit an error where <code>err.code === "HPE_HEADER_OVERFLOW"</code>. The second argument will be the raw socket, which must be written to, then destroyed.</p>
			<pre type="application/ecmascript" w:space="indent">
				var http = require('http');
				var server = http.createServer(/* ... */);
				server.on('clientError', function(err, socket){
					if (socket.writable) {
						if(err.code === 'HPE_HEADER_OVERFLOW'){
							socket.write("HTTP/1.1 431 Request Header Fields Too Large\r\n");
							socket.write("Connection: close\r\n");
							socket.write("\r\n");
						}else{
							socket.write("HTTP/1.1 400 Client Error\r\n");
							socket.write("Connection: close\r\n");
							socket.write("\r\n");
						}
					}
					socket.destroy(err);
				});
			</pre>
			<p>Two limits are configurable: a <code>--max-http-header-size</code> CLI argument passed to Node.js configures the maximum size of the request-line and each header (this is not configurable at runtime), and the <code>Server#maxHeadersCount</code> property configures the total number of allowed headers.</p>

			<h3>Apache httpd</h3>
			<p>httpd sends <a href="400.xml">400 (Client Error)</a> in this situation. <a href="https://github.com/apache/httpd/blob/ac762c1ae12b6620d6c7212f40b2d46e031d8d6c/server/protocol.c#L1207-L1208">This status code is hard coded in the httpd source,</a> but the <a href="https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestfields">LimitRequestFields</a> and <a href="https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestfieldsize">LimitRequestFieldSize</a> directives configure the maximum number and size of headers; up to 100 headers of 4094 bytes each are permitted by default.</p>

			<h2>See also</h2>
			<ul>
				<li><a href="https://httpstatusdogs.com/431-request-header-fields-too-large">HTTP 431 on HTTP STATUS DOGS</a></li>
			</ul>
		</main>
	</body>
</html>
