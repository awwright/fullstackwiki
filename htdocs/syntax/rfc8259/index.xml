<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:w="tag:fullstack.wiki,2018:ns/" lang="en" dir="ltr">
	<head>
		<meta charset="UTF-8" />
		<title>RFC 8259: JSON syntax</title>
		<meta name="description" content="Writing content" />
		<link rel="up" href="../index.xml" />
		<link rel="stylesheet" href="/+/highlight.js/solarized-light.css" />
		<link rel="item" href="IRI.xml" />
		<link rel="item" href="IRI-reference.xml" />
	</head>
	<body>
		<main>

<h1>RFC 8259: JSON syntax</h1>

<p>Main article: <a href="../../media-types/json.xml">JSON (Media Type)</a></p>

<p>JSON is a rough subset of the ECMAScript literal syntax, for encoding six types of commonly used programming data structures: string-value maps (objects), ordered lists (arrays), Unicode strings, decimal numbers, booleans, and null.</p>

<dl class="inline">
	<dt>Specification</dt>
	<dd property="w:specification"><a href="https://tools.ietf.org/html/rfc8259">RFC 8259: The JavaScript Object Notation (JSON) Data Interchange Format</a></dd>
	<dt>Imported</dt>
	<dd>
		<ul>
			<li><a href="../abnf-builtin/index.xml">ABNF core</a></li>
		</ul>
	</dd>
</dl>

<h2>Defined rules</h2>

<pre id="rules-abnf" type="abnf" w:space="indent"><code>
JSON-text = ws value ws

begin-array     = ws %x5B ws  ; [ left square bracket

begin-object    = ws %x7B ws  ; { left curly bracket

end-array       = ws %x5D ws  ; ] right square bracket

end-object      = ws %x7D ws  ; } right curly bracket

name-separator  = ws %x3A ws  ; : colon

value-separator = ws %x2C ws  ; , comma

ws = *(
	%x20 /              ; Space
	%x09 /              ; Horizontal tab
	%x0A /              ; Line feed or New line
	%x0D )              ; Carriage return

value = false / null / true / object / array / number / string

false = %x66.61.6c.73.65   ; false

null  = %x6e.75.6c.6c      ; null

true  = %x74.72.75.65      ; true

object = begin-object [ member *( value-separator member ) ] end-object

member = string name-separator value

array = begin-array [ value *( value-separator value ) ] end-array

number = [ minus ] int [ frac ] [ exp ]

decimal-point = %x2E       ; .

digit1-9 = %x31-39         ; 1-9

e = %x65 / %x45            ; e E

exp = e [ minus / plus ] 1*DIGIT

frac = decimal-point 1*DIGIT

int = zero / ( digit1-9 *DIGIT )

minus = %x2D               ; -

plus = %x2B                ; +

zero = %x30                ; 0

string = quotation-mark *char quotation-mark

char = unescaped /
	 escape (
		  %x22 /          ; "    quotation mark  U+0022
		  %x5C /          ; \    reverse solidus U+005C
		  %x2F /          ; /    solidus         U+002F
		  %x62 /          ; b    backspace       U+0008
		  %x66 /          ; f    form feed       U+000C
		  %x6E /          ; n    line feed       U+000A
		  %x72 /          ; r    carriage return U+000D
		  %x74 /          ; t    tab             U+0009
		  %x75 4HEXDIG    ; uXXXX                U+XXXX
	 )

escape = %x5C              ; \

quotation-mark = %x22      ; "

unescaped = %x20-21 / %x23-5B / %x5D-10FFFF

</code></pre>

				</main>
			</div>
		</div>
	</body>
</html>
