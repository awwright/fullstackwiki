<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:w="tag:fullstack.wiki,2018:ns/" lang="en" dir="ltr">
	<head>
		<meta charset="UTF-8" />
		<title>RFC5234: ABNF syntax</title>
		<meta name="description" content="Lists the rules available to ABNF documents by default" />
		<link rel="up" href="../index.xml" />
		<link rel="stylesheet" href="/+/highlight.js/solarized-light.css" />
	</head>
	<body>
		<main>

<h1>RFC5234: ABNF syntax</h1>

<dl class="inline">
	<!-- <dt>Main Article</dt>
	<dd><a href="../../abnf/index.xml">ABNF</a></dd> -->
	<dt>Specification</dt>
	<dd property="w:specification"><a href="https://tools.ietf.org/html/rfc5234">RFC 5234: Augmented BNF for Syntax Specifications: ABNF</a></dd>
	<dt>Obsoletes</dt>
	<dd>
		<ul>
			<li><a href="https://tools.ietf.org/html/rfc4234">RFC 4234</a></li>
		</ul>
	</dd>
	<dt>Imported</dt>
	<dd>
		<ul>
			<li><a href="../abnf-builtin/index.xml">ABNF core</a></li>
		</ul>
	</dd>
</dl>

<h2>Defined rules</h2>
<pre id="rules-abnf" type="abnf" w:space="indent"><code>
rulelist       =  1*( rule / c-nl )

rule           =  rulename defined-as elements c-nl
               ; continues if next line starts
               ;  with white space

rulename       =  ALPHA *(ALPHA / DIGIT / "-")

defined-as     =  *c-wsp ("=" / "=/") *c-wsp
               ; basic rules definition and
               ;  incremental alternatives

elements       =  alternation *c-wsp

c-wsp          =  WSP / (c-nl WSP)

c-nl           =  comment / CRLF
               ; comment or newline

comment        =  ";" *(WSP / VCHAR) CRLF

alternation    =  concatenation *(*c-wsp "/" *c-wsp concatenation)

concatenation  =  repetition *(1*c-wsp repetition)

repetition     =  [repeat] element

repeat         =  1*DIGIT / (*DIGIT "*" *DIGIT)

element        =  rulename / group / option / char-val / num-val / prose-val

group          =  "(" *c-wsp alternation *c-wsp ")"

option         =  "[" *c-wsp alternation *c-wsp "]"

char-val       =  DQUOTE *(%x20-21 / %x23-7E) DQUOTE
               ; quoted string of SP and VCHAR
               ;  without DQUOTE

num-val        =  "%" (bin-val / dec-val / hex-val)

bin-val        =  "b" 1*BIT [ 1*("." 1*BIT) / ("-" 1*BIT) ]
               ; series of concatenated bit values
               ;  or single ONEOF range

dec-val        =  "d" 1*DIGIT [ 1*("." 1*DIGIT) / ("-" 1*DIGIT) ]

hex-val        =  "x" 1*HEXDIG [ 1*("." 1*HEXDIG) / ("-" 1*HEXDIG) ]

prose-val      =  "&lt;" *(%x20-3D / %x3F-7E) "&gt;"
               ; bracketed string of SP and VCHAR
               ;  without angles
               ; prose description, to be used as
               ;  last resort
</code></pre>


				</main>
			</div>
		</div>
	</body>
</html>
